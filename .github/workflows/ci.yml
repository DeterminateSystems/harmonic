name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check rustfmt
        run: nix develop --command ci-check-rustfmt
      - name: Check Spelling
        run: nix develop --command ci-check-spelling
      - name: Check nixpkgs-fmt formatting
        run: nix develop --command ci-check-nixpkgs-fmt
      - name: Check EditorConfig conformance
        run: nix develop --command ci-check-editorconfig

  build-x86_64-linux:
    name: Build x86_64 Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      # Runs clippy as part of the preBuild.
      - name: Build harmonic
        run: nix build .#packages.x86_64-linux.harmonic -L
      - name: Build harmonicStatic
        run: nix build .#packages.x86_64-linux.harmonicStatic -L
      - name: Create artifact for x86_64-linux harmonicStatic
        uses: actions/upload-artifact@v3
        with:
          name: harmonic-x86_64-linux
          path: |
            result/bin/harmonic

  run-x86_64-linux:
    name: Run x86_64 Linux
    runs-on: ubuntu-22.04
    needs: build-x86_64-linux
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: harmonic-x86_64-linux
      - name: Set executable
        run: chmod +x ./harmonic

      - name: Initial install
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install linux-multi --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Initial uninstall (without a `nix run` first)
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm

      - name: Repeated install
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install linux-multi --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Repeated test run
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix run nixpkgs#fortune
      - name: Repeated uninstall
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm

  run-steam-deck:
    name: Run Steam Deck (mock)
    runs-on: ubuntu-22.04
    needs: build-x86_64-linux
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: harmonic-x86_64-linux
      - name: Set executable
        run: chmod +x ./harmonic
      - name: Make the CI look like a steam deck
        run: |
          mkdir -p ~/bin
          echo -e "#! /bin/sh\nexit 0" | sudo tee -a /bin/steamos-readonly
          sudo chmod +x /bin/steamos-readonly
          sudo groupadd deck
          sudo useradd -m deck
          sudo mkdir -p /home/deck/.config/autostart

      - name: Initial install
        run: sudo PATH=$PATH:$HOME/bin RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install steam-deck --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Initial uninstall (without a `nix run` first)
        run: sudo PATH=$PATH:$HOME/bin RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm

      - name: Repeated install
        run: sudo PATH=$PATH:$HOME/bin RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install steam-deck --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Test run
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix run nixpkgs#fortune
      - name: Repeated uninstall
        run: sudo PATH=$PATH:$HOME/bin RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm
        

  build-x86_64-darwin:
    name: Build x86_64 Darwin
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      # Runs clippy as part of the preBuild.
      - name: Build harmonic
        run: nix build .#packages.x86_64-darwin.harmonic -L
      - name: Create artifact for x86_64-darwin harmonic
        uses: actions/upload-artifact@v3
        with:
          name: harmonic-x86_64-darwin
          path: |
            result/bin/harmonic

  run-x86_64-darwin:
    name: Run x86_64 Darwin
    runs-on: macos-12
    needs: build-x86_64-darwin
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: harmonic-x86_64-darwin
      - name: Set executable
        run: chmod +x ./harmonic

      - name: Initial install
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install darwin-multi --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Initial uninstall (without a `nix run` first)
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm
        
      - name: Repeated install
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic install darwin-multi --extra-conf "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}" --no-confirm
      - name: Repeated test run
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix run nixpkgs#fortune
      - name: Repeated uninstall
        run: sudo RUST_LOG=harmonic=trace RUST_BACKTRACE=full ./harmonic uninstall --no-confirm
        